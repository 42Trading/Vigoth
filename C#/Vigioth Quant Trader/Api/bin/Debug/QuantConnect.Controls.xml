<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VigiothCapital.QuantTrader.Api</name>
    </assembly>
    <members>
        <member name="T:VigiothCapital.QuantTrader.Api.Api">
            <summary>
            Cloud algorithm activity controls
            </summary>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.Initialize">
            <summary>
            Initialize the API.
            </summary>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.ReadLogAllowance(System.Int32,System.String)">
            <summary>
            Calculate the remaining bytes of user log allowed based on the user's cap and daily cumulative usage.
            </summary>
            <param name="userId">User ID</param>
            <param name="userToken">User API token</param>
            <returns>int[3] iUserBacktestLimit, iUserDailyLimit, remaining</returns>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.UpdateDailyLogUsed(System.Int32,System.String,System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Update the daily log of allowed logging-data
            </summary>
            <param name="userId">Id of the User</param>
            <param name="backtestId">BacktestId</param>
            <param name="url">URL of the log entry</param>
            <param name="length">length of data</param>
            <param name="userToken">User access token</param>
            <param name="hitLimit">Boolean signifying hit log limit</param>
            <returns>Number of bytes remaining</returns>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.GetAlgorithmStatus(System.String,System.Int32)">
            <summary>
            Get the algorithm status from the user with this algorithm id.
            </summary>
            <param name="algorithmId">String algorithm id we're searching for.</param>
            <param name="userId">The user id of the algorithm</param>
            <returns>Algorithm status enum</returns>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.SetAlgorithmStatus(System.String,VigiothCapital.QuantTrader.AlgorithmStatus,System.String)">
            <summary>
            Algorithm passes back its current status to the UX.
            </summary>
            <param name="status">Status of the current algorithm</param>
            <param name="algorithmId">String algorithm id we're setting.</param>
            <param name="message">Message for the algorithm status event</param>
            <returns>Algorithm status enum</returns>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.SendStatistics(System.String,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Int32,System.Double)">
            <summary>
            Send the statistics to storage for performance tracking.
            </summary>
            <param name="algorithmId">Identifier for algorithm</param>
            <param name="unrealized">Unrealized gainloss</param>
            <param name="fees">Total fees</param>
            <param name="netProfit">Net profi</param>
            <param name="holdings">Algorithm holdings</param>
            <param name="equity">Total equity</param>
            <param name="netReturn">Net return for the deployment</param>
            <param name="volume">Volume traded</param>
            <param name="trades">Total trades since inception</param>
            <param name="sharpe">Sharpe ratio since inception</param>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.MarketToday(System.DateTime,VigiothCapital.QuantTrader.Symbol)">
            <summary>
            Get the calendar open hours for the date.
            </summary>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.Store(System.String,System.String,VigiothCapital.QuantTrader.StoragePermissions,System.Boolean)">
            <summary>
            Store logs with these authentication type
            </summary>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.SendUserEmail(System.String,System.String,System.String)">
            <summary>
            Send an email to the user associated with the specified algorithm id
            </summary>
            <param name="algorithmId">The algorithm id</param>
            <param name="subject">The email subject</param>
            <param name="body">The email message body</param>
        </member>
        <member name="M:VigiothCapital.QuantTrader.Api.Api.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
    </members>
</doc>
